{"version":3,"sources":["components/Preview.js","images/star.png","components/Map.js","components/Sidebar.js","App.js","index.js"],"names":["Preview","onClose","previewHidden","isPreviewOpen","className","onClick","Map","viewport","setViewport","points","onSelectPlace","selectedPlace","closePopup","mapboxApiAccessToken","process","mapStyle","width","height","onViewportChange","map","point","i","longitude","geometry","coordinates","latitude","properties","name","rating","src","starImage","alt","Sidebar","App","React","zoom","setIsPreviewOpen","setSelectedPlace","places","features","selectPlace","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"874DAYeA,MAVf,YAA8C,IAA3BC,EAA0B,EAA1BA,QAETC,EAFmC,EAAjBC,cAEc,GAAK,iBAC3C,OACI,sBAAKC,UAAS,kBAAaF,GAA3B,UACI,oBAAIE,UAAU,iBAAd,2PACA,wBAAQC,QAASJ,EAASG,UAAU,kBAApC,kG,gBCRG,G,YAAA,IAA0B,kCC6C1BE,MAvCf,YAA2F,IAA5EC,EAA2E,EAA3EA,SAAUC,EAAiE,EAAjEA,YAAaC,EAAoD,EAApDA,OAAQC,EAA4C,EAA5CA,cAAeC,EAA6B,EAA7BA,cAAeC,EAAc,EAAdA,WAIxE,OACI,eAAC,IAAD,2BACQL,GADR,IAEIM,qBAAsBC,6FACtBC,SANS,kCAOTC,MAAM,MACNC,OAAO,QACPC,iBAAkB,SAACX,GAAD,OAAcC,EAAYD,IANhD,UAQKE,EAAOU,KAAI,SAACC,EAAOC,GAAR,OACR,cAAC,IAAD,CAEIC,UAAWF,EAAMG,SAASC,YAAY,GACtCC,SAAUL,EAAMG,SAASC,YAAY,GAHzC,SAKI,wBACInB,QAAS,kBAAMK,EAAcU,IAC7BhB,UAAU,iBANTiB,MASXV,GACE,cAAC,IAAD,CACIP,UAAU,QACVkB,UAAWX,EAAcY,SAASC,YAAY,GAC9CC,SAAUd,EAAcY,SAASC,YAAY,GAC7CvB,QAASW,EAJb,SAKI,sBAAKR,UAAU,iBAAf,UACI,oBAAIA,UAAU,eAAd,SAA+BO,EAAce,WAAWC,OACxD,mBAAGvB,UAAU,gBAAb,SAA+BO,EAAce,WAAWE,SACxD,qBAAKxB,UAAU,sBAAsByB,IAAKC,EAAWC,IAAI,mB,MCtBlEC,MAdf,YAA4D,IAAzCtB,EAAwC,EAAxCA,cAAeD,EAAyB,EAAzBA,OAAQE,EAAiB,EAAjBA,cAItC,OACI,qBAAKP,UAAU,UAAf,SACI,oBAAIA,UAAU,gBAAd,SACKK,EAAOU,KAAI,SAACC,EAAOC,GAAR,OACR,oBAAIhB,QAAS,kBAAMK,EAAcU,IAAQhB,UAAS,6BAAwBO,IAAkBS,GAAS,6BAArG,SAA6IA,EAAMM,WAAWC,MAArBN,W,QC8B9IY,MAlCf,WAAgB,IAAD,EACmBC,WAAe,CAC7CT,SAAU,SACVH,UAAW,UACXa,KAAM,OAJK,mBACN5B,EADM,KACIC,EADJ,OAM6B0B,YAAe,GAN5C,mBAMN/B,EANM,KAMSiC,EANT,OAO6BF,WAAe,MAP5C,mBAONvB,EAPM,KAOS0B,EAPT,KAQP5B,EAAS6B,EAAeC,SAM9B,SAASC,EAAYpB,GACnBiB,EAAiBjB,GAOnB,OACE,sBAAKhB,UAAU,MAAf,UACE,cAAC,EAAD,CAASH,QAdb,WACEmC,GAAiB,IAaiBjC,cAAeA,IAC/C,cAAC,EAAD,CAASO,cAAe8B,EAAa/B,OAAQA,EAAQE,cAAeA,IACpE,cAAC,EAAD,CACEJ,SAAUA,EAAUC,YAAaA,EACjCC,OAAQA,EAAQC,cAAe8B,EAC/B7B,cAAeA,EAAeC,WAXpC,WACEyB,EAAiB,aCrBrBI,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.0c6b5c2c.chunk.js","sourcesContent":["import * as React from 'react';\r\nimport './Preview.css';\r\nfunction Preview({ onClose, isPreviewOpen }) {\r\n\r\n    const previewHidden = isPreviewOpen ? '' : 'preview_hidden';\r\n    return (\r\n        <div className={`preview ${previewHidden}`}>\r\n            <h1 className='preview__title'>Туристические точки притяжения Калиниграда</h1>\r\n            <button onClick={onClose} className='preview__button'>Перейти к карте</button>\r\n        </div>\r\n    );\r\n}\r\nexport default Preview;","export default __webpack_public_path__ + \"static/media/star.7da3171b.png\";","import * as React from 'react';\r\nimport ReactMapGL, { Marker, Popup } from 'react-map-gl';\r\nimport 'mapbox-gl/dist/mapbox-gl.css';\r\nimport './Map.css';\r\nimport starImage from \"../images/star.png\";\r\n\r\nfunction Map({ viewport, setViewport, points, onSelectPlace, selectedPlace, closePopup }) {\r\n\r\n    const mapStyle = 'mapbox://styles/mapbox/dark-v10';\r\n\r\n    return (\r\n        <ReactMapGL\r\n            {...viewport}\r\n            mapboxApiAccessToken={process.env.REACT_APP_MAPBOX_TOKEN}\r\n            mapStyle={mapStyle}\r\n            width=\"70%\"\r\n            height=\"100vh\"\r\n            onViewportChange={(viewport) => setViewport(viewport)}\r\n        >\r\n            {points.map((point, i) =>\r\n                <Marker\r\n                    key={i}\r\n                    longitude={point.geometry.coordinates[0]}\r\n                    latitude={point.geometry.coordinates[1]}\r\n                >\r\n                    <button\r\n                        onClick={() => onSelectPlace(point)}\r\n                        className='map__button' />\r\n                </Marker>\r\n            )}\r\n            { selectedPlace &&\r\n                <Popup\r\n                    className='popup'\r\n                    longitude={selectedPlace.geometry.coordinates[0]}\r\n                    latitude={selectedPlace.geometry.coordinates[1]}\r\n                    onClose={closePopup}>\r\n                    <div className='popup__wrapper'>\r\n                        <h2 className='popup__title' >{selectedPlace.properties.name}</h2>\r\n                        <p className='popup__rating' >{selectedPlace.properties.rating}</p>\r\n                        <img className=\"popup__rating-image\" src={starImage} alt=\"star\" />\r\n                    </div>\r\n                </Popup>}\r\n        </ReactMapGL >\r\n    );\r\n}\r\nexport default Map;","import * as React from 'react';\r\nimport './Sidebar.css';\r\n\r\nfunction Sidebar({ onSelectPlace, points, selectedPlace }) {\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"sidebar\">\r\n            <ul className=\"sidebar__list\">\r\n                {points.map((point, i) =>\r\n                    <li onClick={() => onSelectPlace(point)} className={`sidebar__list-item ${selectedPlace === point && 'sidebar__list-item_active'}`} key={i}>{point.properties.name}</li>\r\n                )}\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\nexport default Sidebar;","import './App.css';\nimport * as React from 'react';\nimport Preview from './components/Preview';\nimport Map from './components/Map';\nimport Sidebar from './components/Sidebar';\nimport * as places from './places/points.json';\n\nfunction App() {\n  const [viewport, setViewport] = React.useState({\n    latitude: 54.707390,\n    longitude: 20.507307,\n    zoom: 11.5\n  });\n  const [isPreviewOpen, setIsPreviewOpen] = React.useState(true);\n  const [selectedPlace, setSelectedPlace] = React.useState(null);\n  const points = places.default.features;\n\n  function closePreview() {\n    setIsPreviewOpen(false);\n  }\n\n  function selectPlace(point) {\n    setSelectedPlace(point);\n  }\n\n  function closePopup() {\n    setSelectedPlace(null)\n  }\n\n  return (\n    <div className=\"app\">\n      <Preview onClose={closePreview} isPreviewOpen={isPreviewOpen} />\n      <Sidebar onSelectPlace={selectPlace} points={points} selectedPlace={selectedPlace} />\n      <Map\n        viewport={viewport} setViewport={setViewport}\n        points={points} onSelectPlace={selectPlace}\n        selectedPlace={selectedPlace} closePopup={closePopup} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}